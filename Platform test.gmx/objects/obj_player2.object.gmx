<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
movespeed = 6;
jsp = 8;
hp = 40;
maxhp = 60;
grav = 0.5;
hdir = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for collisions
//down
if place_meeting(x,y+1,obj_wall){
    wall = instance_place(x,y+1,obj_wall);
    if wall.slimed = 0 || wall.slimed = 1{
        hp -= 1;
        image_xscale = hp/maxhp;
        image_yscale = hp/maxhp;
    }
    wall.slimed = 2;
    
    
}
///Slime the walls drecrease size
//up
if place_meeting(x,y-1,obj_wall){
    wall = instance_place(x,y-1,obj_wall);
    if wall.slimed = 0 || wall.slimed = 1{
        hp -= 1;
        image_xscale = hp/maxhp;
        image_yscale = hp/maxhp;
    }
    wall.slimed = 2;
    
}

//left
if place_meeting(x-1,y,obj_wall){
    wall = instance_place(x-1,y,obj_wall);
    
    if wall.slimed = 0 || wall.slimed = 1{
        hp -= 1;
        image_xscale = hp/maxhp;
        image_yscale = hp/maxhp;
    }   
    wall.slimed = 2;
    
}

//right
if place_meeting(x+1,y,obj_wall){
    wall = instance_place(x+1,y,obj_wall);
    
    if wall.slimed = 0 || wall.slimed = 1{
        hp -= 1;
        image_xscale = hp/maxhp;
        image_yscale = hp/maxhp;
    }
    wall.slimed = 2;
    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move
left = keyboard_check(ord("A"));
right = keyboard_check(ord("D"));
jump = keyboard_check_pressed(ord("W"));
jump_released = keyboard_check_released(ord("W"));
shoot = keyboard_check_pressed(vk_space);

if (right || left){
    hsp = (right-left)*movespeed
    hdir = right-left
    
    
}else{
    hsp = 0;
}


//shoot
if (shoot){
    slime = instance_create(x,y,obj_slimer2);
    hp -= 5;
    image_xscale = hp/maxhp;
    image_yscale = hp/maxhp;

}

if (!place_meeting(x,y+1,obj_wall)){
    vsp += grav;
       
    //control jump height
    if (jump_released &amp;&amp; vsp &lt; -6){
        vsp = -6;
    }
} else {
    vsp = 0;
    
    if(jump){
        vsp = -jsp
        for(var i = 0; i&lt;15; i ++){
            instance_create(x,y,obj_slime_particles2);
        }
    }
}

//Check to wall slide
if place_meeting(x-1, y, obj_wall){
    if(left){
        vsp = 1;
    }
    if(jump){
        vsp = -jsp;
        hsp = 10;
    }
}else if place_meeting(x+1, y, obj_wall){
    if(right){
        vsp = 1;
    }
    if(jump){
        vsp = -jsp;
        hsp = -10;
    }    
}

// Horizontal Collisions
if( place_meeting(x+hsp, y, obj_wall)){
    while (!place_meeting(x+sign(hsp), y, obj_wall)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;



// Vertical collisions
if( place_meeting(x, y+vsp, obj_wall)){
    while (!place_meeting(x, y+sign(vsp), obj_wall)){
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die
if hp &lt;= 0{
    for(var i = 0; i&lt;100;i++){
        instance_create(x,y,obj_slime_particles);
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_end">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = maxhp;
y -= 32;
image_xscale = hp/maxhp;
image_yscale = hp/maxhp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
