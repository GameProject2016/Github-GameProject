<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>SS_Init</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
handle = SS_LoadSound("anime bowling babes.ogg", 1);
SS_LoopSound(handle);
bps = SS_GetSoundBytesPerSecond(handle);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if mouse_button != mb_right then exit;

switch show_menu("Set Frequency|
-Get Frequency|
Set Panning|
-Get Panning|
Set Volume|
-Get Volume
|-|
Please SHOW INFO!!
|-|
Play Sound|
Loop Sound|
Resume Sound|
Stop Sound|
Pause Sound|
Get Sound Playing State|
Set Sound Position"
  ,-1) begin
  case 0:
    SS_SetSoundFreq(handle, get_integer("Frequency from 1000 to 100 000", SS_GetSoundFreq(handle)));
  break;
  
  case 1:
    show_message("Frequency: " + string(SS_GetSoundFreq(handle)));
  break;
  
  case 2:
    SS_SetSoundPan(handle,get_integer("Sound panning from -10 000 to 10 000", SS_GetSoundPan(handle)));
  break;
  
  case 3:
    show_message("Panning: " + string(SS_GetSoundPan(handle)));
  break;
  
  case 4:
    SS_SetSoundVol(handle, get_integer("Sound volume from 0 to 10 000", SS_GetSoundVol(handle)));
  break;
  
  case 5:
    show_message("Volume: "+string(SS_GetSoundVol(handle)));
  break;
  
  case 6:
    show_info();
  break;

  case 7:
    if SS_IsSoundPlaying(handle) != true then
      SS_PlaySound(handle) else
      show_message("Why start it if it's already playing?");
  break;
  
  case 8:
  if SS_IsSoundPlaying(handle) != true then
    SS_LoopSound(handle) else
    show_message("Why start it if it's already playing?");
  break;
  
  case 9:
    if SS_IsSoundPaused(handle) then
      SS_ResumeSound(handle) else
      show_message("Sound isn't paused!");
  break;
  
  case 10:
    SS_StopSound(handle)
  break;
  
  case 11:
    if SS_IsSoundPlaying(handle) then
      SS_PauseSound(handle) else
      show_message("Can't pause a sound that isn't playing")
  break;
  
  case 12:
    if SS_IsSoundPlaying(handle) then
      if SS_IsSoundLooping(handle) then
        show_message("Sound is LOOPING") else
        show_message("Sound is PLAYING") else
      if SS_IsSoundPaused(handle) then
        show_message("Sound is PAUSED") else
        show_message("Sound is STOPPED")
  break;
  
  case 13:
    if SS_IsSoundPaused(handle) then
    show_message("Can't set the position of a paused sound!") else
    SS_SetSoundPosition(handle, get_integer("Set sound position:", SS_GetSoundPosition(handle)));
  break;
end;













</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>SS_Unload</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
pos = SS_GetSoundPosition(handle);
len = SS_GetSoundLength(handle);

draw_text(20,10,"Sound position/length: "+
string(floor(pos/bps))+
"/"+
string(floor(len/bps))+
"  =  "+
string(pos/len*100)+
"%");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
