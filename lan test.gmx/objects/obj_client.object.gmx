<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_server</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name = global.playername
var type = network_socket_tcp;
var ip = "101.165.16.163";
var port = 8000;
socket = network_create_socket(type);
connection = network_connect(socket,ip,port);
var size = 1024;
var type = buffer_fixed;
var allignment = 1;
buffer = buffer_create(size, type, allignment);

// choose shirt colour
image_speed = 0;
image_index = 0;

while(image_index == obj_other.image_index){
    switch(image_index){
        case 0:
            image_index += 1;
            break;
            
        case 1:
            image_index += 1;
            break;
            
        case 2:
            image_index += 1;
            break;
            
        case 3:
            image_index += 1;
            break;
            
        case 4:
            image_index = 0;
            break;
    
    }
}
buffer_seek(buffer,buffer_seek_start,0);
        
buffer_write(buffer,buffer_u8,5);
buffer_write(buffer,buffer_u32,image_index);
        
network_send_packet(socket,buffer, buffer_tell(buffer));

//send name
buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 9); // 4
buffer_write(buffer,buffer_string, name);// 1,mouse_x

network_send_packet(socket,buffer, buffer_tell(buffer));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//get input
scr_get_input();

hsp = 10 * (key_left + key_right);
vsp = 10 * (key_up + key_down);
scr_move();
 
/// send position to server

buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 2); // 1
buffer_write(buffer,buffer_u32, x);// 1,mouse_x
buffer_write(buffer,buffer_u32,y); // 1,mouse_x,mouse_y

network_send_packet(socket,buffer, buffer_tell(buffer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(instance_create(x,y,obj_grenade)){
direction = point_direction(x,y,mouse_x,mouse_y);
pointx = mouse_x;
pointy = mouse_y;
the_target = instance_create(pointx,pointy,obj_target);
}


buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 8); // 4
buffer_write(buffer,buffer_u32, mouse_x);// 1,mouse_x
buffer_write(buffer,buffer_u32,mouse_y); // 1,mouse_x,mouse_y



network_send_packet(socket,buffer, buffer_tell(buffer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create click + send to server

with(instance_create(x,y,obj_bullet)){
direction = point_direction(x,y,mouse_x,mouse_y);
}

//send mouse location to create a bullet
buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 4); // 4
buffer_write(buffer,buffer_u32, mouse_x);// 1,mouse_x
buffer_write(buffer,buffer_u32,mouse_y); // 1,mouse_x,mouse_y



network_send_packet(socket,buffer, buffer_tell(buffer));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for clients and data
var type_event = async_load[? "type"];
switch(type_event){
    case network_type_connect:
        
        break;
        
    case network_type_disconnect:
        
        break;
        
    case network_type_data:
        // handle data
        var buffer = async_load[? "buffer"]
        buffer_seek(buffer,buffer_seek_start,0);
        scr_received_packet(buffer);
        break;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy socket + buffer
network_destroy(socket);
buffer_delete(buffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_names);
draw_set_halign(fa_center);
draw_set_colour(c_dkgray);
draw_text(x - 1,y-82,string(name));
draw_set_colour(c_ltgray);
draw_text(x,y-80,string(name));
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
