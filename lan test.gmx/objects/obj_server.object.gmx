<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_server</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize server object
var type = network_socket_tcp;
var port = 8000;
max_clients = 1;
server = network_create_server(type,port,max_clients);
socket = noone;

var size = 1024;
var type = buffer_fixed;
var allignment = 1;
buffer = buffer_create(size, type, allignment);

// choose shirt colour
image_speed = 0;

randomize();
image_index = irandom(sprite_get_number(spr_server));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = -keyboard_check(vk_left);
key_up = -keyboard_check(vk_up);
key_right= keyboard_check(vk_right);
key_down = keyboard_check(vk_down);

hsp = 10 * (key_left + key_right);
vsp = 10 * (key_up + key_down);

//Movement and Collision
//horizontal collision
if(place_meeting(x+hsp,y,obj_Wall)){

    while(!place_meeting(x+sign(hsp),y,obj_Wall)){
        x+=sign(hsp);
    }
    hsp = 0;

}
x+=hsp;

//Vertical collision
if place_meeting(x,y+vsp,obj_Wall){

    while(!place_meeting(x,y+sign(vsp),obj_Wall)){
        y += sign(vsp);
    }
    vsp = 0;

}
y+=vsp;

//keep inside room
if x &lt; 0{x=0;}
if y &lt; 0{y=0;}
if x &gt; room_width{x = room_width;}
if y &gt; room_height{y = room_height;}


/// create click + send to server

buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 2); // 1
buffer_write(buffer,buffer_u32, x);// 1,mouse_x
buffer_write(buffer,buffer_u32,y); // 1,mouse_x,mouse_y

network_send_packet(socket,buffer, buffer_tell(buffer));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create click + send to server
instance_create(mouse_x,mouse_y,obj_click);
with(instance_create(x,y,obj_bullet)){
direction = point_direction(x,y,mouse_x,mouse_y);
}
buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 1); // 1
buffer_write(buffer,buffer_u32, mouse_x);// 1,mouse_x
buffer_write(buffer,buffer_u32,mouse_y); // 1,mouse_x,mouse_y

network_send_packet(socket,buffer, buffer_tell(buffer));

buffer_seek(buffer,buffer_seek_start,0);

buffer_write(buffer,buffer_u8, 4); // 4
buffer_write(buffer,buffer_u32, mouse_x);// 1,mouse_x
buffer_write(buffer,buffer_u32,mouse_y); // 1,mouse_x,mouse_y



network_send_packet(socket,buffer, buffer_tell(buffer));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for clients and data
var type_event = async_load[? "type"];
switch(type_event){
    case network_type_connect:
        // Add a client to socket
        if (socket == noone){
        socket = async_load[? "socket"];
        instance_create(0,0,obj_other);//create the client object when connected
        instance_create(0,0,obj_god);//start wave countdown when connected
        //send plaer sprite to client so not the same
        var size = 1024;
        var type = buffer_fixed;
        var allignment = 1;
        buffer = buffer_create(size, type, allignment);
        buffer_seek(buffer,buffer_seek_start,0);
        
        buffer_write(buffer,buffer_u8,5);
        buffer_write(buffer,buffer_u32,image_index);
        
        network_send_packet(socket,buffer, buffer_tell(buffer));
        }
        break;
        
    case network_type_disconnect:
        //remove client from socket
        socket = noone;
        with(obj_other){
        instance_destroy();
        }
        max_clients = 0;
        break;
        
    case network_type_data:
        // handle data
        var buffer = async_load[? "buffer"]
        buffer_seek(buffer,buffer_seek_start,0);
        scr_received_packet(buffer);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy server 
network_destroy(server);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_names);
draw_set_halign(fa_center);
draw_set_colour(c_green);
draw_text(x,y-80,"Alexis");
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
